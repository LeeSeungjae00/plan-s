[{"/Users/seungjae/Desktop/study/plan-s/src/index.js":"1","/Users/seungjae/Desktop/study/plan-s/src/App.js":"2","/Users/seungjae/Desktop/study/plan-s/src/Content/ResultTable.jsx":"3","/Users/seungjae/Desktop/study/plan-s/src/reportWebVitals.js":"4","/Users/seungjae/Desktop/study/plan-s/src/Content/tapModule.jsx":"5","/Users/seungjae/Desktop/study/plan-s/src/Module/madeAPIData.jsx":"6","/Users/seungjae/Desktop/study/plan-s/src/Content/Header/Header.jsx":"7","/Users/seungjae/Desktop/study/plan-s/src/Content/InputComponent.jsx":"8","/Users/seungjae/Desktop/study/plan-s/src/Content/RadioComponent.jsx":"9"},{"size":696,"mtime":1659399107343,"results":"10","hashOfConfig":"11"},{"size":4633,"mtime":1660623416115,"results":"12","hashOfConfig":"11"},{"size":15552,"mtime":1660628996719,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1659399107343,"results":"14","hashOfConfig":"11"},{"size":6863,"mtime":1660623476913,"results":"15","hashOfConfig":"11"},{"size":4292,"mtime":1660623416116,"results":"16","hashOfConfig":"11"},{"size":394,"mtime":1659399107343,"results":"17","hashOfConfig":"11"},{"size":1540,"mtime":1659399107343,"results":"18","hashOfConfig":"11"},{"size":1603,"mtime":1659399107343,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"siguu8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seungjae/Desktop/study/plan-s/src/index.js",[],["43","44"],"/Users/seungjae/Desktop/study/plan-s/src/App.js",[],["45","46"],"/Users/seungjae/Desktop/study/plan-s/src/Content/ResultTable.jsx",[],"/Users/seungjae/Desktop/study/plan-s/src/reportWebVitals.js",[],["47","48"],"/Users/seungjae/Desktop/study/plan-s/src/Content/tapModule.jsx",[],"/Users/seungjae/Desktop/study/plan-s/src/Module/madeAPIData.jsx",["49"],"const APITITLE = [\r\n    \"platelet\",\r\n    \"total_bilirubin\",\r\n    \"ALT\",\r\n    \"HBV_DNA\",\r\n    \"male\",\r\n    \"cirrhosis\",\r\n    \"presence_of_HBeAg\"\r\n]\r\n\r\nconst titleMap = {\r\n    platelet : \"Platelet, baseline\",\r\n    total_bilirubin : \"Total bilirubin, baseline\",\r\n    ALT : \"ALT, baseline\",\r\n    HBV_DNA : \"HBV DNA, baseline\",\r\n    male : \"Sex\",\r\n    cirrhosis : \"Cirrhosis, baseline\",\r\n    presence_of_HBeAg : \"Presence of HBeAg, baseline\"\r\n}\r\n\r\nfunction toUnicodeVariant(str, variant, flags) {\r\n    const offsets = {\r\n        m: [0x1d670, 0x1d7f6],\r\n        b: [0x1d400, 0x1d7ce],\r\n        i: [0x1d434, 0x00030],\r\n        bi: [0x1d468, 0x00030],\r\n        c: [0x1d49c, 0x00030],\r\n        bc: [0x1d4d0, 0x00030],\r\n        g: [0x1d504, 0x00030],\r\n        d: [0x1d538, 0x1d7d8],\r\n        bg: [0x1d56c, 0x00030],\r\n        s: [0x1d5a0, 0x1d7e2],\r\n        bs: [0x1d5d4, 0x1d7ec],\r\n        is: [0x1d608, 0x00030],\r\n        bis: [0x1d63c, 0x00030],\r\n        o: [0x24B6, 0x2460],\r\n        p: [0x249C, 0x2474],\r\n        w: [0xff21, 0xff10],\r\n        u: [0x2090, 0xff10]\r\n    }\r\n\r\n    const variantOffsets = {\r\n        'monospace': 'm',\r\n        'bold': 'b',\r\n        'italic': 'i',\r\n        'bold italic': 'bi',\r\n        'script': 'c',\r\n        'bold script': 'bc',\r\n        'gothic': 'g',\r\n        'gothic bold': 'bg',\r\n        'doublestruck': 'd',\r\n        'sans': 's',\r\n        'bold sans': 'bs',\r\n        'italic sans': 'is',\r\n        'bold italic sans': 'bis',\r\n        'parenthesis': 'p',\r\n        'circled': 'o',\r\n        'fullwidth': 'w'\r\n    }\r\n\r\n    // special characters (absolute values)\r\n    var special = {\r\n        m: {\r\n            ' ': 0x2000,\r\n            '-': 0x2013\r\n        },\r\n        i: {\r\n            'h': 0x210e\r\n        },\r\n        g: {\r\n            'C': 0x212d,\r\n            'H': 0x210c,\r\n            'I': 0x2111,\r\n            'R': 0x211c,\r\n            'Z': 0x2128\r\n        },\r\n        o: {\r\n            '0': 0x24EA,\r\n            '1': 0x2460,\r\n            '2': 0x2461,\r\n            '3': 0x2462,\r\n            '4': 0x2463,\r\n            '5': 0x2464,\r\n            '6': 0x2465,\r\n            '7': 0x2466,\r\n            '8': 0x2467,\r\n            '9': 0x2468,\r\n        },\r\n        p: {},\r\n        w: {}\r\n    }\r\n    //support for parenthesized latin letters small cases \r\n    for (var i = 97; i <= 122; i++) {\r\n        special.p[String.fromCharCode(i)] = 0x249C + (i - 97)\r\n    }\r\n    //support for full width latin letters small cases \r\n    for (var i = 97; i <= 122; i++) {\r\n        special.w[String.fromCharCode(i)] = 0xff41 + (i - 97)\r\n    }\r\n\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n    const numbers = '0123456789';\r\n\r\n    var getType = function (variant) {\r\n        if (variantOffsets[variant]) return variantOffsets[variant]\r\n        if (offsets[variant]) return variant;\r\n        return 'm'; //monospace as default\r\n    }\r\n    var getFlag = function (flag, flags) {\r\n        if (!flags) return false\r\n        return flags.split(',').indexOf(flag) > -1\r\n    }\r\n\r\n    var type = getType(variant);\r\n    var underline = getFlag('underline', flags);\r\n    var strike = getFlag('strike', flags);\r\n    var result = '';\r\n\r\n    for (var k of str) {\r\n        let index\r\n        let c = k\r\n        if (special[type] && special[type][c]) c = String.fromCodePoint(special[type][c])\r\n        if (type && (index = chars.indexOf(c)) > -1) {\r\n            result += String.fromCodePoint(index + offsets[type][0])\r\n        } else if (type && (index = numbers.indexOf(c)) > -1) {\r\n            result += String.fromCodePoint(index + offsets[type][1])\r\n        } else {\r\n            result += c\r\n        }\r\n        if (underline) result += '\\u0332' // add combining underline\r\n        if (strike) result += '\\u0336' // add combining strike\r\n    }\r\n    return result\r\n}\r\n\r\nconst madeAPIData = (result, range) => {\r\n    console.log(result)\r\n\r\n    for(let i = 0 ; i < APITITLE.length; i++){\r\n        if(result[APITITLE[i]] === undefined) \r\n            return `Please enter a ${toUnicodeVariant(titleMap[APITITLE[i]], 'bold sans', 'bold')} value`\r\n        if(result[APITITLE[i]] === \"RangeOut\")\r\n            return `Enter according to ${toUnicodeVariant(titleMap[APITITLE[i]], 'bold sans', 'bold')} range` \r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport default madeAPIData;\r\n","/Users/seungjae/Desktop/study/plan-s/src/Content/Header/Header.jsx",[],"/Users/seungjae/Desktop/study/plan-s/src/Content/InputComponent.jsx",["50"],"import React from 'react'\r\nimport { InputAdornment, FormControl, Input, InputLabel, FormHelperText } from '@material-ui/core';\r\n\r\nexport default function InputComponent({ val, setVal,lable, adornment, setInputVal, type, min, max }) {\r\n    const [fonmHelper, setfonmHelper] = React.useState(false)\r\n    return (\r\n        <FormControl fullWidth>\r\n            <InputLabel htmlFor={lable + \"_id\"}>{lable}</InputLabel>\r\n            <Input\r\n                type = \"number\"\r\n                // value = {val}\r\n                onChange={(e) => {\r\n                    setfonmHelper(false);\r\n                    // setVal(e.target.value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if(e.target.value !== \"\"){\r\n                        if (min > e.target.value * 1 || max < e.target.value * 1) {\r\n                            setInputVal(\"RangeOut\");\r\n                            setfonmHelper(true);\r\n                            return;\r\n                        };\r\n                        setInputVal(e.target.value * 1);\r\n                    }else{\r\n                        setfonmHelper(false);\r\n                    }\r\n                    \r\n                }}\r\n                type={type}\r\n                endAdornment={<InputAdornment position=\"end\">{adornment}</InputAdornment>}\r\n                id={lable + \"_id\"}>\r\n            </Input>\r\n            {fonmHelper && <FormHelperText error id={lable + \"-from-helper\"}>{`Please enter a value from ${min} to ${max}`}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n","/Users/seungjae/Desktop/study/plan-s/src/Content/RadioComponent.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"51","replacedBy":"57"},{"ruleId":"53","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":97,"column":14,"nodeType":"61","messageId":"62","endLine":97,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":29,"column":17,"nodeType":"65","endLine":29,"endColumn":28},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],["66"],["67"],"no-redeclare","'i' is already defined.","Identifier","redeclared","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]